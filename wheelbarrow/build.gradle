apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply from: 'bintray-upload.gradle'
apply from: 'dokka-config.gradle'

def wheelbarrowVersionCode = "${config.lib_versions.wheelbarrow.trim().replace(".", "")}".toInteger()
println("Wheelbarrow version code is: $wheelbarrowVersionCode")

android {
    compileSdkVersion "$config.build_versions.compileSdkVersion".toInteger()

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 27
        versionCode wheelbarrowVersionCode
        versionName "${config.lib_versions.wheelbarrow}"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            postprocessing {
                removeUnusedCode false
                removeUnusedResources false
                obfuscate false
                optimizeCode false
                consumerProguardFile 'proguard-consumer-rules.pro'
            }
        }
    }

    compileOptions {
        targetCompatibility "$config.build_versions.targetCompatibility"
        sourceCompatibility "$config.build_versions.targetCompatibility"
    }

    sourceSets {
        //add the kotlin folder as a sources folder
        main.java.srcDirs += 'src/main/kotlin'
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    archives dokkaDocJar
    archives sourcesJar
}

dependencies {
    //kotlin support
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${config.lib_versions.kotlin}"
    //support library
    implementation "com.android.support:appcompat-v7:${config.lib_versions.support_library}"
    //viewmodel & extensions
    implementation "android.arch.lifecycle:viewmodel:${config.lib_versions.viewmodel}"
    //todo switch to implementation. "api" here is a temporary workaround
    api "android.arch.lifecycle:extensions:${config.lib_versions.extensions}"
    //unit tests
    testImplementation "junit:junit:${config.lib_versions.junit}"
    //instrumentation tests
    androidTestImplementation "com.android.support.test:runner:${config.lib_versions.android_test_runner}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${config.lib_versions.espresso_core}"
    androidTestImplementation "junit:junit:${config.lib_versions.junit}"
}